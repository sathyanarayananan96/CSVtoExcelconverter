from tkinter import filedialog
import shutil
import os
import glob
import pandas as pd
import numpy as np
from datetime import datetime
from tkinter import messagebox
from tkinter import *


class csv_excel_conv:
    def file_ip(self):
        files = filedialog.askopenfilenames(initialdir="/", title = "Select files", multiple=True)
        for i in range(len(files)):
            shutil.copy(files[i],"file_source")
        temp = os.listdir(r'file_source')
        maxlimit = len([entry for entry in temp])
        if maxlimit == 0:
            exit()
        for file_name in temp:
            if (len(file_name) > 25):
                delfile = r'file_source' + '\\' + file_name
                os.remove(delfile)
                print('Please rename your file with a name having < 25 characters. Program will continue without:' + delfile)
                messagebox.showinfo('Warning','Please rename your file with a name having < 25 characters. Program will continue without:' + delfile)

    def remove_header(self):
        maxlimit = len([entry for entry in os.listdir(r"file_source")])
        temp = os.listdir(r"file_source")
        src_folder = r"file_source"
        for i in range(maxlimit):
            filenm = src_folder + '\\' + temp[i]
            with open(filenm, 'r', encoding='utf-8') as file:
                data = file.readlines()
            data[0] = "\n"
            with open(filenm, 'w', encoding='utf-8') as file:
                file.writelines(data)
    def remove_footer(self):
        maxlimit = len([entry for entry in os.listdir(r"file_source")])
        temp = os.listdir(r"file_source")
        src_folder = r"file_source"
        for i in range(maxlimit):
            filenm = src_folder + '\\' + temp[i]
            with open(filenm, 'r+') as fp:
                # read and store all lines into list
                lines = fp.readlines()
                # move file pointer to the beginning of a file
                fp.seek(0)
                # truncate the file
                fp.truncate()
                # start writing lines except the last line
                # lines[:-1] from line 0 to the second last line
                fp.writelines(lines[:-1])

    def merge_header(self):
        maxlimit = len([entry for entry in os.listdir(r"file_source")])
        temp = os.listdir(r"file_source")
        for i in range(maxlimit):
            tmp = r'file_source' + '\\' + temp[i]
            filenames = [r'FILEfields.txt', tmp]
#            opfile = r'file_merge' + '\\' + 'm_' + temp[i]
            opfile = r'file_merge' + '\\' + temp[i]
            with open(opfile, 'w') as outfile:
                for names in filenames:
                    with open(names) as infile:
                        outfile.write(infile.read())
                    outfile.write("\n")
            i = i + 1
    def xlconvert(self):
        src_folder = r"file_merge"
        dst_folder = r"file_dest"
        for file_name in os.listdir(src_folder):
            src = src_folder + '/' + file_name
            dst = dst_folder + '/' + file_name
            if os.path.isfile(src):
                shutil.move(src, dst)
        maxlimit = len([entry for entry in os.listdir(dst_folder)])
        temp = os.listdir(dst_folder)
        writer = pd.ExcelWriter('FILE_converted.xlsx', engine='xlsxwriter')
        fname = r'file_dest'
        for i in range(maxlimit):
            filename = fname + '/' + temp[i]
            testdata = pd.read_csv(filename, dtype="string")
            testdata.index = np.arange(1,len(testdata) + 1)
            testdata.to_excel(writer, sheet_name=temp[i])
        writer.close()
    def file_bkp(self):
        if os.path.exists("FILE_converted.xlsx"):
            src = r"FILE_converted.xlsx"
            dst = r"file_dest"
            shutil.move(src,dst)
            os.remove(r'FILEfields.txt')
            maxlimit = len([entry for entry in os.listdir(r'file_source')])
            temp = os.listdir(r'file_source')
            for i in range(maxlimit):
                delfiles = r"file_source\\" + temp[i]
                os.remove(delfiles)
            now = datetime.now()
            currentdate = 'FILE_'+ now.strftime('%Y') + now.strftime('%m') + now.strftime('%d') + '_' + now.strftime('%H%M%S')
            directory = filedialog.askdirectory(initialdir="/", title = "select output location")
            if len(directory) == 0:
               askuser = messagebox.askyesno(title='confirmation',message='Do you want to exit?')
               if askuser:
                   xlpath = r'file_dest'
                   for f in glob.iglob(xlpath + '\\' + "FILE_converted.xlsx", recursive=True):
                       os.remove(f)
                   temp2 = os.listdir(r'file_dest')
                   for j in range(len([entry for entry in os.listdir(r'file_dest')])):
                       delfiles2 = r"file_dest" + '\\' + temp2[j]
                       os.remove(delfiles2)
                       exit()
            path = os.path.join(directory,currentdate)
            os.mkdir(path)
            for file_name in os.listdir(r"file_dest"):
                src = "file_dest" + '\\' + file_name
                shutil.move(src,path)
        os.startfile(path)

class userfilechoice():
    def ctafheader(self):
        reportlist=list()
        reportlist.append('TRAN_TYPE_ID,')
        reportlist.append('AMT_TRAN,')
        reportlist.append('TSTAMP_LOCAL   ,')
        reportlist.append('DATE_RECON_ACQ,')
        reportlist.append('RETRIEVAL_REF_NO,')
        reportlist.append('TRAN_DISPOSITION,')
        reportlist.append('MASKPAN,')
        reportlist.append('MASKPAN_TOKEN,')
        reportlist.append('SYS_TRACE_AUDIT_NO,')
        reportlist.append('CARD_ACPT_BUS_CODE,')
        reportlist.append('CARD_SEQ_NO,')
        reportlist.append('INST_ID_ACQ,')
        reportlist.append('CARD_ACPT_ID,')
        reportlist.append('CARD_ACPT_NAME_LOC,')
        reportlist.append('TOKEN_REQUESTOR_ID,')
        reportlist.append('PRIMARY_KEY,')
        reportlist.append('ACQ_REF_NO,')
        reportlist.append('ACQ_ROUTING_NO,')
        reportlist.append('ACT_CODE,')
        reportlist.append('ADDITIONAL_AMT,')
        for i in range(24):
            reportlist.append('ADDITIONAL_AMT SUBFIELD,')
        reportlist.append('ADDITIONAL_RESP_AMT,')
        for j in range(24):
            reportlist.append('ADDITIONAL_RESP_AMT SUBFIELD,')
        reportlist.append('ADL_DATA_NATIONAL,')
        reportlist.append('ADL_DATA_PRIV_ACQ,')
        reportlist.append('ADL_DATA_PRIV_ISS,')
        reportlist.append('ADL_RESP_DATA,')
        reportlist.append('ADL_RQST_AMT40,')
        reportlist.append('AMOUNT_OTHER,')
        reportlist.append('AMT_CARD_BILL,')
        reportlist.append('AMT_RECON_ACQ,')
        reportlist.append('AMT_RECON_ISS,')
        reportlist.append('AMT_RECON_NET,')
        reportlist.append('AMT_SURCHARGE,')
        reportlist.append('APPL_CRYPTOGRAM,')
        reportlist.append('APPL_TRAN_COUNTER,')
        reportlist.append('APPL_INTRCHG_PROF,')
        reportlist.append('APPL_VERSION_NO,')
        reportlist.append('APPROVAL_CODE,')
        reportlist.append('AS2805_BAI,')
        reportlist.append('AS2805_CCI,')
        reportlist.append('AS2805_CCT,')
        reportlist.append('AS2805_CCV,')
        reportlist.append('AS2805_DATE_RECON,')
        reportlist.append('AS2805_DCP,')
        reportlist.append('AS2805_DE03,')
        reportlist.append('AS2805_DE22,')
        reportlist.append('AS2805_DE25,')
        reportlist.append('AS2805_DE39,')
        reportlist.append('AS2805_ECM,')
        reportlist.append('AS2805_EFC,')
        reportlist.append('AS2805_EOM,')
        reportlist.append('AS2805_FBK,')
        reportlist.append('AS2805_FCR,')
        reportlist.append('AS2805_MCR,')
        reportlist.append('AS2805_MDI,')
        reportlist.append('AS2805_MTI,')
        reportlist.append('AS2805_ODE_DATE_RECON,')
        reportlist.append('AS2805_ODE_MTI,')
        reportlist.append('AS2805_SFV,')
        reportlist.append('AS2805_SLI,')
        reportlist.append('AS2805_TCC,')
        reportlist.append('AS2805_TRACK2_PRESENT,')
        reportlist.append('AUTH_BY,')
        reportlist.append('AUTH_LCYCLE_TCODE,')
        reportlist.append('AUTH_LCYCLE_TRACE,')
        reportlist.append('CARD_ACPT_COUNTRY,')
        reportlist.append('CARD_ACPT_PST_CODE,')
        reportlist.append('CARD_ACPT_REGION,')
        reportlist.append('CARD_ACPT_SPNSR_ID,')
        reportlist.append('CARD_ACPT_TERM_ID,')
        reportlist.append('CARD_OWNER,')
        reportlist.append('CARD_TYPE,')
        reportlist.append('CARDH_VER_RESULT,')
        reportlist.append('CAVV_RESULT,')
        reportlist.append('CHIP_TOKEN_REQ_ID,')
        reportlist.append('CLERK_ID,')
        reportlist.append('CNTRY_RCN_ACQ_INST,')
        reportlist.append('CNTRY_RCN_ISS_INST,')
        reportlist.append('CNV_CRD_BIL_RATE,')
        reportlist.append('CNV_RCN_ACQ_RATE,')
        reportlist.append('CNV_RCN_ISS_RATE,')
        reportlist.append('CNV_RCN_NET_RATE,')
        reportlist.append('COPAC_CCS_CRYPTO,')
        reportlist.append('COUNTRY_ACQ_INST,')
        reportlist.append('CROSS_BORDER_CUR_IND,')
        reportlist.append('CROSS_BORDER_TRAN_IND,')
        reportlist.append('CRYPT_INFO_DATA,')
        reportlist.append('CRYPT_INFO_DATA,')
        reportlist.append('CRYPTOGRAM_AMOUNT,')
        reportlist.append('CUR_CARD_BILL,')
        reportlist.append('CUR_RECON_ACQ,')
        reportlist.append('CUR_RECON_ISS,')
        reportlist.append('CUR_RECON_NET,')
        reportlist.append('CUR_TRAN,')
        reportlist.append('CVV_CVC_RESULT,')
        reportlist.append('CVV2_CVC2_RESULT,')
        reportlist.append('DATA_PRIV_ACQ,')
        reportlist.append('DATA_PRIV_ISS,')
        reportlist.append('DATE_ACTION,')
        reportlist.append('DATE_CAPTURE,')
        reportlist.append('DATE_CNV_ACQ,')
        reportlist.append('DATE_CNV_ISS,')
        reportlist.append('DATE_EFFECTIVE,')
        reportlist.append('DATE_RECON_ISS,')
        reportlist.append('DATE_RECON_NET,')
        reportlist.append('DCC_IND,')
        reportlist.append('DEDICATED_FILE_NAM,')
        reportlist.append('DEST_ROUTING_NO,')
        reportlist.append('EXTENDED_PAY_DATA,')
        reportlist.append('F_AMT90,')
        reportlist.append('F_AMT91,')
        reportlist.append('F_AMT92,')
        reportlist.append('F_AMT,')
        reportlist.append('FEES,')
        for k in range(29):
            reportlist.append('FEES SUBFIELD,')
        reportlist.append('FORM_FACTOR_IND,')
        reportlist.append('FUNC_CODE,')
        reportlist.append('HCE_ACTIVATE_RESULT,')
        reportlist.append('IMPACT_TO_ACQ,')
        reportlist.append('IMPACT_TO_ISS,')
        reportlist.append('INSERT_SEQUENCE_NO,')
        reportlist.append('INST_ID_ISS,')
        reportlist.append('INST_ID_RECN_ACQ_B,')
        reportlist.append('INST_ID_RECN_ISS_B,')
        reportlist.append('INST_ID_RECON_ACQ,')
        reportlist.append('INST_ID_RECON_ISS,')
        reportlist.append('ISS_APPL_DATA,')
        reportlist.append('ISS_AUTH_DATA,')
        reportlist.append('ISS_DISCR_DATA,')
        reportlist.append('ISS_ROUTING_NO,')
        reportlist.append('ISS_SCRIPT_RESULT,')
        reportlist.append('ISS_SCRIPT1_DATA,')
        reportlist.append('ISS_SCRIPT2_DATA,')
        reportlist.append('MERCH_DISP_NAME,')
        reportlist.append('MERCH_TYPE,')
        reportlist.append('MERCH_VERIFY_VALUE,')
        reportlist.append('MSG_RESON_CODE_ACQ,')
        reportlist.append('MTI,')
        reportlist.append('NET_ID_ACQ,')
        reportlist.append('NET_ID_ISS,')
        reportlist.append('NET_TERM_ID,')
        reportlist.append('NETWORK_PROGRAM,')
        reportlist.append('O_AMT_RECON_ACQ,')
        reportlist.append('O_AMT_RECON_NET,')
        reportlist.append('O_AMT_TRAN,')
        reportlist.append('ODE_MTI,')
        reportlist.append('ODE_SYS_TRA_AUD_NO,')
        reportlist.append('ODE_TSTAMP_LOCL_TR,')
        reportlist.append('ODE_INST_ID_ACQ,')
        reportlist.append('ORIG_DATA,')
        reportlist.append('ORIG_FEES,')
        for l in range(29):
            reportlist.append('ORIG FEES SUBFIELD,')
        reportlist.append('PAN_IDENTIFIER,')
        reportlist.append('PAN_INDICATOR,')
        reportlist.append('PAN_PREFIX,')
        reportlist.append('PAN_RANGE,')
        reportlist.append('PAN_SUFFIX,')
        reportlist.append('PAYEE,')
        reportlist.append('PIN_DATA_FMT,')
        reportlist.append('PIN_FLG,')
        reportlist.append('POS_CRD_DAT_IN_CAP,')
        reportlist.append('POS_CRDHLDR_AUTH_C,')
        reportlist.append('POS_CARD_CAPT_CAP,')
        reportlist.append('POS_OPER_ENV,')
        reportlist.append('POS_CRDHLDR_PRESNT,')
        reportlist.append('POS_CARD_PRES,')
        reportlist.append('POS_CRD_DAT_IN_MOD,')
        reportlist.append('POS_CRDHLDR_A_METH,')
        reportlist.append('POS_CRDHLDR_AUTH,')
        reportlist.append('POS_CRD_DAT_OT_CAP,')
        reportlist.append('POS_TERM_OUT_CAP,')
        reportlist.append('POS_PIN_CAPT_CAP,')
        reportlist.append('PROC_BILLING_FLGS2,')
        reportlist.append('PROC_GRP_ID_ACQ_B,')
        reportlist.append('PROC_GRP_ID_ISS_B,')
        reportlist.append('PROC_ID_ACQ_B,')
        reportlist.append('PROC_ID_ISS_B,')
        reportlist.append('PROGRAM_ID,')
        reportlist.append('PYMT_ACCT_REF,')
        reportlist.append('RECORD_STATUS,')
        reportlist.append('REF_DATA_ACQ,')
        reportlist.append('REF_DATA_ACQ_FMT,')
        reportlist.append('REF_DATA_ISS,')
        reportlist.append('REF_DATA_ISS_FMT,')
        reportlist.append('ROLE,')
        reportlist.append('RPT_LVL_ID_B,')
        reportlist.append('RULE_NAME,')
        reportlist.append('SRV_GRP_INTCHG_IND,')
        reportlist.append('SRV_GRP_SERV_CODE,')
        reportlist.append('STANDIN_ACT,')
        reportlist.append('TERM_CAPABILITIES,')
        reportlist.append('TERM_CLASS,')
        reportlist.append('TERM_COUNTRY_CODE,')
        reportlist.append('TERM_SERIAL_NO,')
        reportlist.append('TERM_VERIFY_RESULT,')
        reportlist.append('TERMINAL_TYPE,')
        reportlist.append('TOKEN_ASSURANCE,')
        reportlist.append('TOKEN_CARD_SEQ_NO,')
        reportlist.append('TOKEN_DEVICE_LOC,')
        reportlist.append('TOKEN_DEVICE_TYPE,')
        reportlist.append('TOKEN_EXP_DATE,')
        reportlist.append('TOKEN_REF_NUMBER,')
        reportlist.append('TOKEN_SER_PROVIDER,')
        reportlist.append('TOKEN_STATUS,')
        reportlist.append('TOKEN_TRANID,')
        reportlist.append('TOKEN_TYPE,')
        reportlist.append('TOKEN_VERSION,')
        reportlist.append('TRAN_CATEGORY_CODE,')
        reportlist.append('TRAN_CLASS,')
        reportlist.append('TRAN_CURRENCY_CODE,')
        reportlist.append('TRAN_DATE,')
        reportlist.append('TRAN_DESC,')
        reportlist.append('TRAN_SEQ_COUNTER,')
        reportlist.append('TRAN_TYPE,')
        reportlist.append('TRAN_UNIQUE_DATA,')
        reportlist.append('TRANS_ROUTING_NO,')
        reportlist.append('TSTAMP_TRANS,')
        reportlist.append('VISA_SETL_FLG,')
        reportlist.append('DATE_EXP,')
        reportlist.append('TRANSACTION_ID,')
        reportlist.append('TRACK_2_DATA,')
        reportlist.append('SELLER ID,')
        reportlist.append('MCI_ECS_LVL_IND')
#        print('reportlist=', reportlist, 'reportlistlen')
#        print('listlength=', len(reportlist))
        ipfile = r'FILEfields.txt'
        with open(ipfile, 'w') as fp:
            for i in range(len(reportlist)):
                pass
                fp.write(reportlist[i])
    def customreport(self):
            reportlist=list()
            reportlist.append('TRAN_TYPE_ID,')
            reportlist.append('AMT_TRAN,')
            reportlist.append('TSTAMP_LOCAL   ,')
            reportlist.append('DATE_RECON_ACQ,')
            reportlist.append('RETRIEVAL_REF_NO,')
            reportlist.append('TRAN_DISPOSITION,')
            reportlist.append('MASKPAN,')
            reportlist.append('MASKPAN_TOKEN,')
            reportlist.append('SYS_TRACE_AUDIT_NO,')
            reportlist.append('CARD_ACPT_BUS_CODE,')
            reportlist.append('CARD_SEQ_NO,')
            reportlist.append('INST_ID_ACQ,')
            reportlist.append('CARD_ACPT_ID,')
            reportlist.append('CARD_ACPT_NAME_LOC,')
            reportlist.append('TOKEN_REQUESTOR_ID,')
            reportlist.append('PRIMARY_KEY,')
            reportlist.append('ACQ_REF_NO,')
            reportlist.append('ACQ_ROUTING_NO,')
            reportlist.append('ACT_CODE,')
            reportlist.append('ADDITIONAL_AMT,')
            for i in range(24):
                reportlist.append('ADDITIONAL_AMT SUBFIELD,')
            reportlist.append('ADDITIONAL_RESP_AMT,')
            for j in range(24):
                reportlist.append('ADDITIONAL_RESP_AMT SUBFIELD,')
            reportlist.append('ADL_DATA_NATIONAL,')
            reportlist.append('ADL_DATA_PRIV_ACQ,')
            reportlist.append('ADL_DATA_PRIV_ISS,')
            reportlist.append('ADL_RESP_DATA,')
            reportlist.append('ADL_RQST_AMT40,')
            reportlist.append('AMOUNT_OTHER,')
            reportlist.append('AMT_CARD_BILL,')
            reportlist.append('AMT_RECON_ACQ,')
            reportlist.append('AMT_RECON_ISS,')
            reportlist.append('AMT_RECON_NET,')
            reportlist.append('AMT_SURCHARGE,')
            reportlist.append('APPL_CRYPTOGRAM,')
            reportlist.append('APPL_TRAN_COUNTER,')
            reportlist.append('APPL_INTRCHG_PROF,')
            reportlist.append('APPL_VERSION_NO,')
            reportlist.append('APPROVAL_CODE,')
            reportlist.append('AS2805_BAI,')
            reportlist.append('AS2805_CCI,')
            reportlist.append('AS2805_CCT,')
            reportlist.append('AS2805_CCV,')
            reportlist.append('AS2805_DATE_RECON,')
            reportlist.append('AS2805_DCP,')
            reportlist.append('AS2805_DE03,')
            reportlist.append('AS2805_DE22,')
            reportlist.append('AS2805_DE25,')
            reportlist.append('AS2805_DE39,')
            reportlist.append('AS2805_ECM,')
            reportlist.append('AS2805_EFC,')
            reportlist.append('AS2805_EOM,')
            reportlist.append('AS2805_FBK,')
            reportlist.append('AS2805_FCR,')
            reportlist.append('AS2805_MCR,')
            reportlist.append('AS2805_MDI,')
            reportlist.append('AS2805_MTI,')
            reportlist.append('AS2805_ODE_DATE_RECON,')
            reportlist.append('AS2805_ODE_MTI,')
            reportlist.append('AS2805_SFV,')
            reportlist.append('AS2805_SLI,')
            reportlist.append('AS2805_TCC,')
            reportlist.append('AS2805_TRACK2_PRESENT,')
            reportlist.append('AUTH_BY,')
            reportlist.append('AUTH_LCYCLE_TCODE,')
            reportlist.append('AUTH_LCYCLE_TRACE,')
            reportlist.append('CARD_ACPT_COUNTRY,')
            reportlist.append('CARD_ACPT_PST_CODE,')
            reportlist.append('CARD_ACPT_REGION,')
            reportlist.append('CARD_ACPT_SPNSR_ID,')
            reportlist.append('CARD_ACPT_TERM_ID,')
            reportlist.append('CARD_OWNER,')
            reportlist.append('CARD_TYPE,')
            reportlist.append('CARDH_VER_RESULT,')
            reportlist.append('CAVV_RESULT,')
            reportlist.append('CHIP_TOKEN_REQ_ID,')
            reportlist.append('CLERK_ID,')
            reportlist.append('CNTRY_RCN_ACQ_INST,')
            reportlist.append('CNTRY_RCN_ISS_INST,')
            reportlist.append('CNV_CRD_BIL_RATE,')
            reportlist.append('CNV_RCN_ACQ_RATE,')
            reportlist.append('CNV_RCN_ISS_RATE,')
            reportlist.append('CNV_RCN_NET_RATE,')
            reportlist.append('COPAC_CCS_CRYPTO,')
            reportlist.append('COUNTRY_ACQ_INST,')
            reportlist.append('CROSS_BORDER_CUR_IND,')
            reportlist.append('CROSS_BORDER_TRAN_IND,')
            reportlist.append('CRYPT_INFO_DATA,')
            reportlist.append('CRYPT_INFO_DATA,')
            reportlist.append('CRYPTOGRAM_AMOUNT,')
            reportlist.append('CUR_CARD_BILL,')
            reportlist.append('CUR_RECON_ACQ,')
            reportlist.append('CUR_RECON_ISS,')
            reportlist.append('CUR_RECON_NET,')
            reportlist.append('CUR_TRAN,')
            reportlist.append('CVV_CVC_RESULT,')
            reportlist.append('CVV2_CVC2_RESULT,')
            reportlist.append('DATA_PRIV_ACQ,')
            reportlist.append('DATA_PRIV_ISS,')
            reportlist.append('DATE_ACTION,')
            reportlist.append('DATE_CAPTURE,')
            reportlist.append('DATE_CNV_ACQ,')
            reportlist.append('DATE_CNV_ISS,')
            reportlist.append('DATE_EFFECTIVE,')
            reportlist.append('DATE_RECON_ISS,')
            reportlist.append('DATE_RECON_NET,')
            reportlist.append('DCC_IND,')
            reportlist.append('DEDICATED_FILE_NAM,')
            reportlist.append('DEST_ROUTING_NO,')
            reportlist.append('EXTENDED_PAY_DATA,')
            reportlist.append('F_AMT90,')
            reportlist.append('F_AMT91,')
            reportlist.append('F_AMT92,')
            reportlist.append('F_AMT,')
            reportlist.append('FEES,')
            for k in range(29):
                reportlist.append('FEES SUBFIELD,')
            reportlist.append('FORM_FACTOR_IND,')
            reportlist.append('FUNC_CODE,')
            reportlist.append('HCE_ACTIVATE_RESULT,')
            reportlist.append('IMPACT_TO_ACQ,')
            reportlist.append('IMPACT_TO_ISS,')
            reportlist.append('INSERT_SEQUENCE_NO,')
            reportlist.append('INST_ID_ISS,')
            reportlist.append('INST_ID_RECN_ACQ_B,')
            reportlist.append('INST_ID_RECN_ISS_B,')
            reportlist.append('INST_ID_RECON_ACQ,')
            reportlist.append('INST_ID_RECON_ISS,')
            reportlist.append('ISS_APPL_DATA,')
            reportlist.append('ISS_AUTH_DATA,')
            reportlist.append('ISS_DISCR_DATA,')
            reportlist.append('ISS_ROUTING_NO,')
            reportlist.append('ISS_SCRIPT_RESULT,')
            reportlist.append('ISS_SCRIPT1_DATA,')
            reportlist.append('ISS_SCRIPT2_DATA,')
            reportlist.append('MERCH_DISP_NAME,')
            reportlist.append('MERCH_TYPE,')
            reportlist.append('MERCH_VERIFY_VALUE,')
            reportlist.append('MSG_RESON_CODE_ACQ,')
            reportlist.append('MTI,')
            reportlist.append('NET_ID_ACQ,')
            reportlist.append('NET_ID_ISS,')
            reportlist.append('NET_TERM_ID,')
            reportlist.append('NETWORK_PROGRAM,')
            reportlist.append('O_AMT_RECON_ACQ,')
            reportlist.append('O_AMT_RECON_NET,')
            reportlist.append('O_AMT_TRAN,')
            reportlist.append('ODE_MTI,')
            reportlist.append('ODE_SYS_TRA_AUD_NO,')
            reportlist.append('ODE_TSTAMP_LOCL_TR,')
            reportlist.append('ODE_INST_ID_ACQ,')
            reportlist.append('ORIG_DATA,')
            reportlist.append('ORIG_FEES,')
            for l in range(29):
                reportlist.append('ORIG FEES SUBFIELD,')
            reportlist.append('PAN_IDENTIFIER,')
            reportlist.append('PAN_INDICATOR,')
            reportlist.append('PAN_PREFIX,')
            reportlist.append('PAN_RANGE,')
            reportlist.append('PAN_SUFFIX,')
            reportlist.append('PAYEE,')
            reportlist.append('PIN_DATA_FMT,')
            reportlist.append('PIN_FLG,')
            reportlist.append('POS_CRD_DAT_IN_CAP,')
            reportlist.append('POS_CRDHLDR_AUTH_C,')
            reportlist.append('POS_CARD_CAPT_CAP,')
            reportlist.append('POS_OPER_ENV,')
            reportlist.append('POS_CRDHLDR_PRESNT,')
            reportlist.append('POS_CARD_PRES,')
            reportlist.append('POS_CRD_DAT_IN_MOD,')
            reportlist.append('POS_CRDHLDR_A_METH,')
            reportlist.append('POS_CRDHLDR_AUTH,')
            reportlist.append('POS_CRD_DAT_OT_CAP,')
            reportlist.append('POS_TERM_OUT_CAP,')
            reportlist.append('POS_PIN_CAPT_CAP,')
            reportlist.append('PROC_BILLING_FLGS2,')
            reportlist.append('PROC_GRP_ID_ACQ_B,')
            reportlist.append('PROC_GRP_ID_ISS_B,')
            reportlist.append('PROC_ID_ACQ_B,')
            reportlist.append('PROC_ID_ISS_B,')
            reportlist.append('PROGRAM_ID,')
            reportlist.append('PYMT_ACCT_REF,')
            reportlist.append('RECORD_STATUS,')
            reportlist.append('REF_DATA_ACQ,')
            reportlist.append('REF_DATA_ACQ_FMT,')
            reportlist.append('REF_DATA_ISS,')
            reportlist.append('REF_DATA_ISS_FMT,')
            reportlist.append('ROLE,')
            reportlist.append('RPT_LVL_ID_B,')
            reportlist.append('RULE_NAME,')
            reportlist.append('SRV_GRP_INTCHG_IND,')
            reportlist.append('SRV_GRP_SERV_CODE,')
            reportlist.append('STANDIN_ACT,')
            reportlist.append('TERM_CAPABILITIES,')
            reportlist.append('TERM_CLASS,')
            reportlist.append('TERM_COUNTRY_CODE,')
            reportlist.append('TERM_SERIAL_NO,')
            reportlist.append('TERM_VERIFY_RESULT,')
            reportlist.append('TERMINAL_TYPE,')
            reportlist.append('TOKEN_ASSURANCE,')
            reportlist.append('TOKEN_CARD_SEQ_NO,')
            reportlist.append('TOKEN_DEVICE_LOC,')
            reportlist.append('TOKEN_DEVICE_TYPE,')
            reportlist.append('TOKEN_EXP_DATE,')
            reportlist.append('TOKEN_REF_NUMBER,')
            reportlist.append('TOKEN_SER_PROVIDER,')
            reportlist.append('TOKEN_STATUS,')
            reportlist.append('TOKEN_TRANID,')
            reportlist.append('TOKEN_TYPE,')
            reportlist.append('TOKEN_VERSION,')
            reportlist.append('TRAN_CATEGORY_CODE,')
            reportlist.append('TRAN_CLASS,')
            reportlist.append('TRAN_CURRENCY_CODE,')
            reportlist.append('TRAN_DATE,')
            reportlist.append('TRAN_DESC,')
            reportlist.append('TRAN_SEQ_COUNTER,')
            reportlist.append('TRAN_TYPE,')
            reportlist.append('TRAN_UNIQUE_DATA,')
            reportlist.append('TRANS_ROUTING_NO,')
            reportlist.append('TSTAMP_TRANS,')
            reportlist.append('VISA_SETL_FLG,')
            reportlist.append('DATE_EXP,')
            reportlist.append('TRANSACTION_ID,')
            reportlist.append('TRACK_2_DATA,')
            reportlist.append('SELLER ID,')
            reportlist.append('MCI_ECS_LVL_IND')
            top = Tk()
        # create listbox object
            listbox = Listbox(top, height=100, width=30, selectmode=MULTIPLE, bg="white",
                  activestyle='dotbox',
                  font="Arial",
                  fg="black")
        # Define the size of the window.
            top.geometry("300x250")
        # Define a label for the list.
            label = Label(top, text = "CUSTOM REPORT")
        # insert elements by their index and names.
            for m in range(len(reportlist)):
                listbox.insert(m,reportlist[m])
            def printopt():
                ipfile = r'FILEfields.txt'
                with open(ipfile, 'w') as fp:
                    for z in listbox.curselection():
                        pass
                        fp.write(listbox.get(z))
            btn = Button(top, text='Print Selected', command=lambda:printopt())
        # pack the widgets
            label.pack()
            listbox.pack()
            btn.place(x=10,y=20)
        # Display until User exits themselves.
            top.mainloop()
#userfilechoice().customreport()
